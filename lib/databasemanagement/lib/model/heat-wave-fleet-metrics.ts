/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The details of the HeatWave cluster fleet health metrics.
 */
export interface HeatWaveFleetMetrics {
  /**
   * The beginning of the time range during which metric data is retrieved.
   */
  "startTime": string;
  /**
   * The end of the time range during which metric data is retrieved.
   */
  "endTime": string;
  /**
   * The list of HeatWave clusters in the fleet and their usage metrics.
   */
  "fleetClusters": Array<model.HeatWaveClusterUsageMetrics>;
  /**
   * A summary of the inventory count and the metrics that describe the aggregated usage of CPU, storage, and so on of all the HeatWave clusters in the fleet.
   */
  "fleetSummary": Array<model.HeatWaveFleetSummary>;
}

export namespace HeatWaveFleetMetrics {
  export function getJsonObj(obj: HeatWaveFleetMetrics): object {
    const jsonObj = {
      ...obj,
      ...{
        "fleetClusters": obj.fleetClusters
          ? obj.fleetClusters.map(item => {
              return model.HeatWaveClusterUsageMetrics.getJsonObj(item);
            })
          : undefined,
        "fleetSummary": obj.fleetSummary
          ? obj.fleetSummary.map(item => {
              return model.HeatWaveFleetSummary.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: HeatWaveFleetMetrics): object {
    const jsonObj = {
      ...obj,
      ...{
        "fleetClusters": obj.fleetClusters
          ? obj.fleetClusters.map(item => {
              return model.HeatWaveClusterUsageMetrics.getDeserializedJsonObj(item);
            })
          : undefined,
        "fleetSummary": obj.fleetSummary
          ? obj.fleetSummary.map(item => {
              return model.HeatWaveFleetSummary.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
